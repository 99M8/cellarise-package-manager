{
  "name": "node-dir-diff",
  "description": "directory comparison for node.js using hive-loader",
  "version": "0.0.1",
  "private": false,
  "scripts": {
    "test": "tap ./test",
    "start": "node index"
  },
  "dependencies": {
    "underscore": "*",
    "async": "~0.1.22",
    "gate": "~0.3.0",
    "mkdirp": ">=0.3.4",
    "dank-copyfile": "0.0.1",
    "rmdir": ">0.1",
    "ejs": "~0.8.3",
    "hive-loader": "0.0.1",
    "filecompare": "0.0.2"
  },
  "devDependencies": {
    "tap": ">=0.3",
    "chai": "~1.5.0"
  },
  "main": "lib/index.js",
  "keyworkds": [
    "hive",
    "spawn",
    "dir",
    "diff"
  ],
  "readme": "node-dir-diff\n=============\n\nA directory comparison system using hive-loader/node.js. Compares two or more directories.\n\nThe comparisons have three possible \"depths\":\n\n1) path only -- checks the file/directory paths for added or missing files, but ignores content (comp == 'list');\n2) size -- does a stat, and notes files that are the same name, but different sizes. (comp = 'size')\n3) content -- compares file content on a byte level (using the filecompare module). (comp = 'full')\n\nNote that tests that fail a simpler test will not be subjected to higher tests;\nthat is, if a file is not found in all\nthe directories you pass in, the instances of it that do exist will not be compared by size/content.\n\nUsage\n-----\n\nTo compare two or more directories, simply call\n\n<code>\n\n\tvar dd = new ndd.Dir_Diff(\n\t\t[\n\t\t\tpath.resolve(root, 'test_1'),\n\t\t\tpath.resolve(root, 'test_2'),\n\t\t\tpath.resolve(root, 'test_3')\n\t\t],\n\t\t'full'\n\t);\n\n\tdd.compare(function (err, result) {\n\tif (result.deviation > 0){\n\t\tconsole.log('you have %s deviations!', result.deviation);\n\t\tconsole.log(util.inspect(deviation));\n\t}\n});\n</code>\n\nAny number of directories can be passed in; if the comparison mode is omitted, 'list' is assumed.\n\nThe first item in the list is taken as the \"normal\" directory; this won't affect deviations, but it does explain\nwhat the basis is for report elements like \"added\" or \"missing\".\n\nOutput\n------\n\nThe feedback to the callback is a report object:\n\n<code>\n\t\t{\n\t\t\troot_dirs:    [the input to dir_diff],\n\t\t\tadded:\t\t  [info]\n\t\t\tdirs:         {dir_hash}\n\t\t\tfile_status:  [file-dir-status],\n\t\t\tdir_status:   [file-dir-status],\n\t\t\tdeviation:    posint,\n\t\t\tdeviations:   [deviation-report],\n\t\t\tcommon_files: common_files,\n\t\t\tadded:        added,\n\t\t\tmissing:      missing\n\t\t};\n</code>\n\nMost of the report is work product; the deviation and deviations properties are the most significant elements of the\nreport.\n\nwhere info is\n\n<code>\n \t{\n \t\tsubpath: string (relative to root dir),\n \t\tpath:    string (absolute pate to file),\n \t\ttype:    string ('file' or 'dir'),\n \t\troot:    string (the root dir)\n \t}\n</code>\n\ndir-hash is\n\n<code>\n\t{\n\t\t'root_dir': ['dir paths...'],\n\t\t...\n\t\t'root_dir': ['dir paths...']\n\t}\n</code>\n\nfile-dir-status is\n<code>\n\t[{dir: 'root_dir',\n\t devaition: posint,\n\t added:[ 'subpath'... 'subpath']\n\t missing: ['subpath' ... 'subpath']\n\t } ... {}]\n</code>\n\ndeviation-report is\n<code>\n\t{\n\t\t\"type\":    \"string\",\n\t\t\"info\":    \"string\" | info,\n\t\t\"variant\": \"added\" | \"removed\" (optional);\n\t}\n\n</code>\n\nsee the \"sample outpuut.json\" file in test resources.",
  "_id": "node-dir-diff@0.0.1",
  "dist": {
    "shasum": "8ff5f99bb5045215d05c0b9c050d7eb50c445e46",
    "tarball": "http://registry.npmjs.org/node-dir-diff/-/node-dir-diff-0.0.1.tgz"
  },
  "_npmVersion": "1.1.62",
  "_npmUser": {
    "name": "bingomanatee",
    "email": "dave@wonderlandlabs.com"
  },
  "maintainers": [
    {
      "name": "bingomanatee",
      "email": "dave@wonderlandlabs.com"
    }
  ],
  "directories": {},
  "_shasum": "8ff5f99bb5045215d05c0b9c050d7eb50c445e46",
  "_resolved": "https://registry.npmjs.org/node-dir-diff/-/node-dir-diff-0.0.1.tgz",
  "_from": "node-dir-diff@0.0.1"
}
